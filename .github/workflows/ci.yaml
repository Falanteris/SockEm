name: Build and Release SockEm

on:
  push:
    tags:
      - 'v*'

jobs:
  coverage:
    name: coverage report
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: pip install coverage

      - name: Run Tests with Coverage
        run: |
          coverage run src/SockEm.py
          coverage xml

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}

      
  build:
    name: Build Binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build Binary
        run: |
          pyinstaller --onefile src/SockEm.py
        shell: bash

      - name: Archive Binary
        if: matrix.os == 'ubuntu-latest'
        run: mv dist/SockEm dist/SockEm-linux

      - name: Archive Binary
        if: matrix.os == 'windows-latest'
        run: mv dist/SockEm.exe dist/SockEm-windows.exe
      
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: SockEm-${{ matrix.os == 'ubuntu-latest' && 'linux' || 'windows.exe' }}
          path: dist/SockEm-${{ matrix.os == 'ubuntu-latest' && 'linux' || 'windows.exe' }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: SockEm-windows.exe
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: SockEm-linux
      - name: Debug List Dist Directory
        run: ls -R dist

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Create GitHub Release
        uses: actions/create-release@v1
        id: create_release
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            This release includes the latest binaries for SockEm.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Windows Binary
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: SockEm-windows.exe
          asset_name: SockEm-windows.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Linux Binary
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: SockEm-linux
          asset_name: SockEm-linux
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}